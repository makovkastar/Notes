apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'jacoco'

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.melnykov.notes"

        minSdkVersion 19
        targetSdkVersion 27

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

jacoco {
    toolVersion = "0.7.4+"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:${versions.kotlin}"

    implementation "com.android.support:appcompat-v7:${versions.supportLibrary}"
    implementation "com.android.support.constraint:constraint-layout:${versions.constraintLayout}"

    implementation "com.facebook.stetho:stetho:${versions.stetho}"

    testImplementation "junit:junit:${versions.junit}"

    androidTestImplementation "com.android.support.test:runner:${versions.supportTestRunner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn 'createDebugCoverageReport'
    dependsOn 'testDebugUnitTest'

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*',
                      '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']

    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)

    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree], [kotlinDebugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}